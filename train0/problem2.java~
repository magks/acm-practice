import java.util.Date;

public class Problem2HolidayFinder {

    Date year;
    public static void main( String[] args)
    {
	int year = arg[0];
	 
	System.out.println(getLaborDay(year));
	System.out.println(getMemorialDay(year));
	System.out.println(getThanksgivingDay(year));
	System.out.println(getElection(year));
    }

    Date getLaborDay(int n)
    {
	
	Calendar offset = new GregorianCalendar(n, Calendar.SEPTEMBER, 1);
	int dayFirstOfMonth = offset.get(Calendar.DAY_OF_WEEK);
	int firstMonday = 1;
	switch (dayFirstOfMonth) {
	case 1: firstMonday += 1; break;
	case 2: firstMonday += 0; break;
	case 3: firstMonday += 7; break;
	case 4: firstMonday += 6; break;
	case 5: firstMonday += 5; break;
	case 6: firstMonday += 4; break;
	case 7: firstMonday += 3; break;       	    
	}
	Calendar laborDay = new GregorianCalendar(n, Calendar.SEPTEMBER, firstMonday);
    }
    
    Date getMemorialDay(int n);
    {

	Calendar offset = new GregorianCalendar(n, Calendar.MAY, 31 );
	int dayLastOfMonth = offset.get(Calendar.DAY_OF_WEEK);
	int lastMonday = 31;
	switch (dayLastOfMonth) {
	case 1: lastMonday += 1; break;
	case 2: lastMonday += 0; break;
	case 3: lastMonday += -1; break;
	case 4: lastMonday += -2; break;
	case 5: lastMonday += -3; break;
	case 6: lastMonday += -4; break;
	case 7: lastMonday += -5; break;       	    
	}
	Calendar laborDay = new GregorianCalendar(n, Calendar.MAY, lastMonday);	
	
    }

    Date getThanksgivingDay(int n);
    {
	//4th thurs in nov

	//get first thursday
	Calendar offset = new GregorianCalendar(n, Calendar.NOVEMBER, 1);
	int dayFirstOfMonth = offset.get(Calendar.DAY_OF_WEEK);
	int fourthThursday = 1;

	switch (dayFirstOfMonth) {
	case 1: fourthThursday += 4; break;
	case 2: fourthThursday += 3; break;
	case 3: fourthThursday += 2; break;
	case 4: fourthThursday += 1; break;
	case 5: fourthThursday += 0; break;
	case 6: fourthThursday += 6; break;
	case 7: fourthThursday += 7; break;       	    
	}
	fourthThursday += 21; // 1st thurs. + 3rd thurs. will be the fourth thurs.

	
	Calendar laborDay = new GregorianCalendar(n, Calendar.NOVEMBER, fourthThursday );	

    }
    Date getElectionDay(int n);
    {
	//first tues. after 1st mon. in nov.
	int firstTuesAfterMonday = 0;
	//get 1st mon.in NOV
 
	Calendar offset = new GregorianCalendar(n, Calendar.NOVEMBER, 1);
	int dayFirstOfMonth = offset.get(Calendar.DAY_OF_WEEK);
	int firstMonday = 1;
	switch (dayFirstOfMonth) {
	case 1: firstMonday += 1; break;
	case 2: firstMonday += 0; break;
	case 3: firstMonday += 7; break;
	case 4: firstMonday += 6; break;
	case 5: firstMonday += 5; break;
	case 6: firstMonday += 4; break;
	case 7: firstMonday += 3; break;       	    
	}
   
	//get first tuesday after first monday
	firstTuesAfterMonday += 8 ; 
	Calendar electionDay = new GregorianCalendar(n, Calendar.NOVEMBER, firstTuesAfterMonday);	
	
    }
}
